<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Products</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-5">Product Admin</h1>

        <!-- Product Form -->
        <form id="productForm">
            <div class="mb-3">
                <label for="productName" class="form-label">Product Name</label>
                <input type="text" class="form-control" id="productName" required>
            </div>
            <div class="mb-3">
                <label for="productDescription" class="form-label">Description</label>
                <textarea class="form-control" id="productDescription" rows="3" required></textarea>
            </div>
            <div class="mb-3">
                <label for="productPrice" class="form-label">Price</label>
                <input type="number" class="form-control" id="productPrice" required>
            </div>
            <div class="mb-3">
                <label for="productImage" class="form-label">Image URL</label>
                <input type="text" class="form-control" id="productImage" required>
            </div>
            <button type="submit" class="btn btn-primary">Add Product</button>
        </form>

        <!-- Delete All Button -->
        <button class="btn btn-danger mt-3" onclick="deleteAllProducts()">Delete All Products</button>

        <h2 class="mt-5">Existing Products</h2>
        <table class="table table-striped mt-3" id="productTable">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Product Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="productList"></tbody>
        </table>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <script>
        let editingProductId = null;

        async function fetchProducts() {
    try {
        const response = await axios.get('http://localhost:5000/products');
        console.log(response.data);  // In dữ liệu trả về từ backend
        if (response.data && response.data.length > 0) {
            const products = response.data;
            const productList = document.getElementById('productList');
            productList.innerHTML = '';
            products.forEach(product => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><img src="${product.image}" alt="${product.name}" style="width: 100px; height: auto;"></td>
                    <td>${product.name}</td>
                    <td>${product.description}</td>
                    <td>$${product.price}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editProduct('${product._id}', '${product.name}', '${product.description}', ${product.price}, '${product.image}')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteProduct('${product._id}')">Delete</button>
                    </td>
                `;
                productList.appendChild(row);
            });
        } else {
            alert('Không có sản phẩm nào.');
        }
    } catch (error) {
        console.error('Lỗi khi lấy sản phẩm:', error);
        alert('Lỗi: ' + (error.response?.data?.message || error.message));
    }
}

        document.getElementById('productForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const newProduct = {
                name: document.getElementById('productName').value,
                description: document.getElementById('productDescription').value,
                price: document.getElementById('productPrice').value,
                image: document.getElementById('productImage').value
            };

            try {
                if (editingProductId) {
                    await axios.put(`http://localhost:5000/products/update/${editingProductId}`, newProduct);
                } else {
                    await axios.post('http://localhost:5000/products/create', newProduct);
                }
                fetchProducts();
                e.target.reset();
                editingProductId = null;
            } catch (error) {
                console.error('Error adding/updating product:', error);
                alert('Error adding/updating product: ' + (error.response?.data?.message || error.message));
            }
        });

        async function editProduct(id, name, description, price, image) {
            editingProductId = id;
            document.getElementById('productName').value = name;
            document.getElementById('productDescription').value = description;
            document.getElementById('productPrice').value = price;
            document.getElementById('productImage').value = image;
        }

        async function deleteProduct(id) {
            try {
                await axios.delete(`http://localhost:5000/products/delete/${id}`);
                fetchProducts();
            } catch (error) {
                console.error('Error deleting product:', error);
                alert('Error deleting product: ' + (error.response?.data?.message || error.message));
            }
        }

        async function deleteAllProducts() {
            try {
                await axios.delete('http://localhost:5000/products/deleteAll');
                fetchProducts();
            } catch (error) {
                console.error('Error deleting all products:', error);
                alert('Error deleting all products: ' + (error.response?.data?.message || error.message));
            }
        }

        fetchProducts();
    </script>
</body>
</html>
